---
title: 스프링 컨테이너
categories: springBase
---

## ApplicationContext
```java
//스프링 컨테이너 생성
ApplicationContext applicationContext = new AnnotationConfigApplicationContext(AppConfig.class);
```
+ ApplicationContext는 스프링 컨테이너이면서 인터페이스이다.
+ 스프링 컨테이너는 XML를 기반으로 만들 수 있고, 애노테이션 기반의 자바 설정 클래스로 만들 수 있다. 
(위의 소스코드는 AppConfig 자바 설정 클래스로 스프링 컨테이너를 만든 것이다)

### 스프링 컨테이너 생성 과정  
**1. 스프링 컨테이너 생성**  
![스프링 컨테이너1](https://user-images.githubusercontent.com/48073115/126323300-099ef436-e3cf-4bec-a1dd-3e08e62b7fe9.png)
+ new AnnotationConfigApplicationContext(AppConfig.class)의 실행과정이다.
+ 스프링 컨테이너를 생성할 때, 구성 정보를 지정해야하는데, 여기서 AppConfig.class를 구성정보로 지정했다.
**2. 스프링 빈 등록**  
![스프링 컨테이너2](https://user-images.githubusercontent.com/48073115/126324423-db82bf2f-82ab-4992-937c-9a99b8de1ff8.png)
+ 스프링 컨테이너는 파라미터로 넘어온 설정 클래스 정보(AppConfig.class)를 사용해서 스프링 빈을 등록한다.
### @Bean
+ 스프링 빈 저장소에 빈 등록하기 위한 어노테이션이다.
+ 빈 이름은 기본적으로 메서드 이름을 사용하고 직접 부여할수도 있다.
  + ex) @Bean(name = "memberService2")   

**주의: 빈 이름은 항상 다른 이름으로 부여해야 한다.** 같은 이름을 부여하면 다른 빈이 무시되거나 기존 빈을 덮어버리거나 
설정에 따라 오류가 발생한다.  

**3. 스프링 빈 의존관계 설정**  
![스프링 컨테이너3](https://user-images.githubusercontent.com/48073115/126328713-88e1fc25-24e3-48f1-add5-f8714831fa62.png)
+ 스프링 컨테이너는 설정 정보를 참고해서 의존관계를 주입(DI)한다.

## BeanFactory와 ApplicationContext  
![스프링 컨테이너4](https://user-images.githubusercontent.com/48073115/126330553-c3df41db-a3a7-48c9-90e0-47d42adfb813.png)
### BeanFactory
+ 스프링 컨테이너의 최상위 인터페이스다.
+ 스프링 빈을 관리하고 조회하는 역할을 담당한다.

### ApplicationContext  
+ BeanFactory 기능을 모두 상속받아서 제공한다. + 수 많은 부가기능을 제공한다.

### ApplicationContext가 제공하는 부가기능
![스프링 컨테이너5](https://user-images.githubusercontent.com/48073115/126331430-4b2627c9-68ad-458e-8ac3-eda157a0f15b.png)
+ 메시지소스를 활용한 국제화 기능
  + ex)한국 -> 한국어, 영어권 -> 영어로 출력
+ 환경변수
  + 로컬, 개발, 운영등을 구분해서 처리
+ 애플리케이션 이벤트
  + 이벤트를 발행하고 구독하는 모델을 편리하게 지원
+ 편리한 리소스 조회
  + 파일, 클래스패스, 외부 등에서 리소스를 편리하게 조회

### 정리
+ ApplicationContext는 BeanFactory의 기능을 상속받는다.
+ ApplicationContext는 빈 관리기능 + 편리한 부가 기능을 제공한다.
+ BeanFactory를 직접 사용할 일은 거의 없다. 부가기능이 포함된 ApplicationContext를 사용한다.
+ BeanFactory나 ApplicationContext를 스프링 컨테이너라 한다.

출처 - [스프링 핵심 원리 - 기본편 ](https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8/dashboard)

