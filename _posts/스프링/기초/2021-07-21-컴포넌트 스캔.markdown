--- 
title: 컴포넌트 스캔
categories: springBase
---

## 컴포넌트 스캔과 의존관계 자동 주입 시작하기
+ 스프링 빈을 등록할 때 자바코드의 @Bean이나 XML의 <bean> 등을 통해서 설정 정보에 직접 등록할 스프링 빈을 나열했다. 
이렇게 등록해야 할 스프링 빈이 수십, 수백개가 되면 일일이 등록하기도 귀찮고, 설정 정보도 커지고, 누락하는 문제도 발생한다.
+ 그래서 스프링은 설정 정보가 없어도 자동으로 스프링 빈을 등록하는 컴포넌트 스캔이라는 기능을 제공한다.
+ 의존관계도 자동으로 주입하는 @Autowired라는 기능도 제공한다.

### 컴포넌트 스캔과 자동 의존관계 주입 과정
**1. @ComponentScan**  
![컴포넌트 스캔1](https://user-images.githubusercontent.com/48073115/126396369-4f25de3d-61b1-436f-b4d5-5c98e228e7ee.png)
+ @ComponentScan은 @Component가 붙은 모든 클래스를 스프링 빈으로 등록한다.
+ 이때 스프링 빈의 기본 이름은 클래스명을 사용하되 맨 앞글자만 소문자를 사용한다.
  + 빈 이름 기본 전략: MemberServiceImpl -> memberServiceImpl
  + 빈 이름 직접 지정: @Component("memberServiceImpl")

**2. @Autowired 의존관계 자동 주입**  
![컴포넌트 스캔2](https://user-images.githubusercontent.com/48073115/126397185-c2798a2d-0610-48d3-9a4c-01073df47828.png)
+ 생성자에 @Autowired를 지정하면, 스프링 컨테이너가 자동으로 해당 스프링 빈을 찾아서 주입한다.
+ 이때 기본 조회 전략은 타입이 같은 빈을 찾아서 주입한다.
+ 생성자에 파라미터가 많아도 다 찾아서 자동으로 주입한다.
  
## 컴포넌트 스캔 기본 대상
컴포넌트 스캔은 @Component 뿐만 아니라 다음과 같은 내용도 추가로 대상에 포함한다.
+ @Component : 컴포넌트 스캔에서 사용
+ @Controller : 스프링 MVC 컨트롤러에서 사용
+ @Service : 스프링 비지니스 로직에서 사용
+ @Repository : 스프링 데이터 접근 계층에서 사용
+ @Configuration : 스프링 설정 정보에서 사용

컴포넌트 스캔의 용도 뿐만 아니라 다음 애노테이션이 있으면 스프링은 부가 기능을 수행한다.
+ @Controller : 스프링 MVC 컨트롤러로 인식
+ @Repository : 스프링 데이터 접근 계층으로 인식하고, 데이터 계층의 예외를 스프링 예외로 변환해준다.
+ @Configuration : 앞서 보았듯이 스프링 설정 정보로 인식하고, 스프링 빈이 싱글톤을 유지하도록 추가 처리를 한다.
+ @Service : 사실 @Service는 특별한 처리를 하지 않는다. 대신 개발자들이 핵심 비지니스 로직이 있는 비지니스 계층을 인식하는데 도움이 된다.

출처 - [스프링 핵심 원리 - 기본편 ](https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8/dashboard)
