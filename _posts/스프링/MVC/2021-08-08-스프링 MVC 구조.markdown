---
title: 스프링 MVC 구조
categories: springMVC
---

![spring mvc 구조1](https://user-images.githubusercontent.com/48073115/128629877-fd39162e-3aa5-4e53-9886-fe7088874934.png)

### 동작 순서
1. 핸들러 조회 : 핸들러 매핑을 통해 요청 URL에 매핑된 핸들러(컨트롤러)를 조회한다.
2. 핸들러 어댑터 조회 : 핸들러를 실행할 수 있는 핸들러 어댑터를 조회한다.
3. 핸들러 어댑터 실행 : 핸들러 어댑터를 실행한다.
4. 핸들러 실행 : 핸들러 어댑터가 실제 핸들러를 실행한다.
5. ModelAndView 반환 : 핸들러 어댑터는 핸들러가 반환하는 정보를 ModelAndView로 변환해서 반환한다.
6. viewResolver 호출 : 뷰 리졸버를 찾고 실행한다.
7. View 반환 : 뷰 리졸버는 뷰의 논리 이름을 물리 이름으로 바꾸고, 렌더링 역할을 담당하는 뷰 객체를 반환한다.
8. 뷰 렌더링 : 뷰를 통해서 뷰를 랜더링 한다.

### DispacherServlet
+ DispacherServlet는 부모 클래스에서 HttpServlet을 상속 받아서 사용하고, 서블릿으로 동작한다.
  + DispacherServlet -> FrameworkServlet -> HttpServletBean -> HttpServlet
+ 스프링 부트는 DispacherServlet을 서블릿으로 자동으로 등록하면서 모든 경로(urlPatterns="/")에 대해서 매핑한다.
  + 더 자세한 경로가 우선순위가 높다. 그래서 기존에 등록한 서블릿도 함께 동작한다.
+ **요청 흐름**
  + 서블릿이 호출되면 HttpServlet이 제공하는 service()가 호출된다.
  + 스프링 MVC는 DispatcherServlet의 부모인 FrameworkServlet에서 service()를 오버라이드 해두었다.
  + FrameworkServlet.service()를 시작으로 여러 메서드가 호출되면서 DispacherServlet.doDispatch()기 호출된다.

### @Controller
+ 스프링이 자동으로 스프링 빈으로 등록한다. (내부에 @Component 애노테이션이 있어서 컴포넌트 스캔의 대상이 됨)
+ 스프링 MVC에서 애노테이션 기반 컨트롤러로 인식한다.

### @RequestMapping
+ 가장 우선순위가 높은 핸들러 매핑과 핸들러 어댑터는 RequestMappingHandlerMapping, RequestMappingHandlerAdapter 이다.
+ @RequestMapping의 앞글자를 따서 만든 이름인데, 이것이 바로 지금 스프링에서 주로 사용하는 애노테이션 기반의 컨트롤을 지원하는 매핑과 어댑터이다.
+ 실무에서는 99.9% 이 방식의 컨트롤러를 사용한다.
+ @RequestMapping -> @GetMapping, @PostMapping
  + @RequestMapping은 URL만 매칭하는 것이 아니라, HTTP Method도 함께 구분할 수 있다.

### @RequestParam
+ 스프링은 HTTP 요청 파라미터를 @RequestParam으로 받을 수 있다.
+ @RequestParam("username")은 request.getParameter("username")와 거의 같은 코드라 생각하면 된다.
+ GET 쿼리 파라미터, POST Form 방식을 모두 지원한다.

### ModelAndView
+ 모델과 뷰 정보를 담는다.

### Model 파라미터
+ model.addAttribute("members", members); 처럼 Model을 파라미터로 받을 수 있다.

출처 - [스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술](https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1/dashboard)



