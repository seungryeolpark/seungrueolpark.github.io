---
title: 파일 업로드
categories: springMVC
---

### HTML 폼 전송 방식
**1. application/x-www-form-urlencoded**

![파일 업로드1](https://user-images.githubusercontent.com/48073115/130570328-2c6494e3-c0ae-407f-a764-96ce9423bc94.png)

+ HTML 폼 데이터를 서버로 전송하는 가장 기본적인 방법
  + Form 태그에 별도의 enctype 옵션이 없으면 웹 브라우저는 요청 HTTP 메시지의 헤더에 다음 내용을 추가한다.
  + Content-Type: application/x-www-form-urlencoded
  + 그리고 폼에 입력한 전송할 항목을 HTTP Body에 문자로 username=kim&age=20 와 같이 & 로 구분해서 전송한다.
+ 파일을 업로드 하려면 파일은 문자가 아니라 바이너리 데이터를 전송해야 한다. -> 문자를 전송하는 이 방식으로 파일을 전송하기는 어렵다.
+ 이 문제를 해결하기 위해 HTTP는 multipart/form-data 라는 전송 방식을 제공한다.

**2. multipart/form-data**

![파일 업로드2](https://user-images.githubusercontent.com/48073115/130581346-bbde6965-621e-4275-bf8a-6438b3c79a68.png)

+ 이 방식을 사용하려면 Form 태그에 별도의 entype="multipart/form-data"를 지정해야 한다.
+ multipart/form-data 방식은 다른 종류의 여러 파일과 폼의 내용 함께 전송할 수 있다.(그래서 이름이 multipart이다.)
+ 폼의 입력 결과로 생성된 HTTP 메시지를 보면 각각의 전송 항목이 구분이 되어있다.
+ Content-Disposition 이라는 항목별 헤더가 추가되어 있고 여기에 부가 정보가 있다.
+ multipart/form-data 는 이렇게 각각의 항목을 구분해서, 한번에 전송하는 것이다.

### application.properties 설정
```properties
file.dir=파일 업로드 경로 설정
```
```java
@Value("${file.dir}")
private String fileDir;
```

+ String fileDir 에 file.dir 값을 넣는다.

```properties
logging.level.org.apache.coyote.http11=debug
```

+ 이 옵션을 사용하면 HTTP 요청 메시지를 확인할 수 있다.

```properties
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=10MB
```

+ 큰 파일을 무제한 업로드하게 둘 수는 없으므로 업로드 사이즈를 제한할 수 있다.
+ 사이즈를 넘으면 예외(SizeLimitExceededException)가 발생한다.
+ max-file-size : 파일 하나의 최대 사이즈, 기본 1MB
+ max-request-size : 멀티파트 요청 하나에 여러 파일을 업로드 할 수 있는데, 그 전체 합. 기본 10MB

```properties
spring.servlet.multipart.enabled=false (기본 true)
```

+ 이 옵션을 켜면 스프링 부트는 서블릿 컨테이너에게 멀티파트 데이터를 처리하라고 설정한다.

### 스프링 파일 업로드
```java
public String saveFile(@RequestParam String itemName,
    @RequestParam MultipartFile file, HttpServletRequest 
    request) throws IOException
```

+ @RequestParam MultipartFile file : 업로드하는 HTML Form 의 name 에 맞추어 @RequestParam 을 적용하면 된다.
+ @ModelAttribute 에서도 MultipartFile 을 동일하게 사용할 수 있다.

### MultipartFile 주요 메서드
+ file.getOriginalFilename() : 업로드 파일 명
+ file.transferTo(...) : 파일 저장

출처 - [스프링 MVC 2편 - 백엔드 웹 개발 활용 기술](https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-2/dashboard)
